# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Country {
  _id: String!
  name: String!
  flag: String
  alpha2Code: String!
}

type User {
  _id: ID!
  username: String
  firstName: String!
  lastName: String!
  phone: String
  address: String
  country: Country
  email: String!
  isEmailVerified: Boolean
  avatar: String
}

type Category {
  _id: String!
  name: String!
  color: String!
  description: String!
}

type EmailVerifyResponse {
  message: String!
}

type Message {
  _id: String!

  """body of message in text plain or markdown """
  text: String!

  """field <text> parsed to html"""
  html: String!
  fromUser: ID!
  roomId: ID!
}

type Room {
  _id: String!
  name: String!
  users: [String!]!
  type: RoomType!
}

enum RoomType {
  OneToOne
  OrgChannel
}

type Word {
  _id: String!
  name: String!
  category: Category!
}

type Query {
  user(_id: String!): User!
  me: User!
  categories: [Category!]!
  category(_id: ID!): Category!
  countries: [Country!]!
  message(_id: ID!): Message!
  room(_id: ID!): Room!
  words: [Word!]!
  randomWords(limit: Int!, categoryId: String!): [Word!]!
  word(_id: ID!): Word!
}

type Mutation {
  updateMe(data: UserUpdateInput!): User!
  createUser(data: UserCreateInput!): User!
  createCategory(data: CategoryCreateInput!): Category!
  updateCategory(data: CategoryUpdateInput!, _id: ID!): Category!
  deleteCategory(_id: ID!): Category!
  verifyEmail(data: EmailVerificationInput!): EmailVerifyResponse!
  createMessage(data: MessageCreateInput!): Message!
  updateMessage(data: MessageUpdateInput!, _id: ID!): Message!
  createRoom(data: RoomCreateInput!): Room!
  updateRoom(data: RoomUpdateInput!, _id: ID!): Room!
  createWord(data: WordCreateInput!): Word!
  updateWord(data: WordUpdateInput!, _id: ID!): Word!
  deleteWord(_id: ID!): Word!
}

input UserUpdateInput {
  username: String
  firstName: String
  lastName: String
  phone: String
  address: String
  country: CountryInput
  email: String
  avatar: String
}

input CountryInput {
  name: String!
  flag: String
  alpha2Code: String!
}

input UserCreateInput {
  username: String
  firstName: String
  lastName: String
  phone: String
  address: String
  country: CountryInput
  email: String
  password: String
  avatar: String
}

input CategoryCreateInput {
  name: String!
  color: String!
  description: String!
}

input CategoryUpdateInput {
  name: String
  color: String
  description: String!
}

input EmailVerificationInput {
  token: String!
}

input MessageCreateInput {
  """body of message in text plain or markdown """
  text: String!
  roomId: ID!
}

input MessageUpdateInput {
  """body of message in text plain or markdown """
  text: String
}

input RoomCreateInput {
  name: String!
  users: [String!]
  type: RoomType!
}

input RoomUpdateInput {
  name: String
  users: [String!]
  type: RoomType
}

input WordCreateInput {
  name: String!
  categoryId: String!
}

input WordUpdateInput {
  name: String!
}

type Subscription {
  messageCreated: Message!
}
